// 1. 패키지를 사용하는 이유는 무엇인가?
// : 코드의 재활용과 이미 컴파일된 코드는 다시 컴파일하지 않아도 된다.
//
// 2. 대문자로 시작하는 식별자와 그렇지 않은 식별자의 차이점은? (ex. Average 와 average)
// : 패키지에 있는 함수등의 이름이 대문자면 외부에서 패키지를 사용할때 직접 접근할 수 있다.
//   소문자로 시작하는 식별자를 가진 요소들은 패키지 내부에서만 사용한다.
//
// 3. 패키지 별칭은 무엇인가? 패키지 별칭은 어떻게 만드는가?
// : 패키지를 불러올때 경로가 길거나 패키지명이 길게 되면, 다소 불편할 수 있다.
//   코드내에서 유니크한 별칭을 지정하면 간편하게 패키지를 사용할 수 있다.
//
//   import m "golang-book-run/11-Packages/ewcho/math"
//
// 4. 7장의 average 함수를 새 패키지로 복사한다. float64 타입의 슬라이스에 들어 있는 값 가운데
//    최소값과 최대값을 찾는 Min, Max 함수를 각각 만들어라.
// : math.go 참고
//
// 5. 4번 문제에서 만든 함수에 대해 어떻게 문서화하겠는가?
// :

package main

import (
	"fmt"
	"golang-book-run/11-Packages/ewcho/math"
)

func main() {
	avg := math.Average([]float64{1, 2, 3, 4, 5})
	fmt.Println(avg)
}
